generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime?  @updatedAt @map("updated_at")
  avatar    String?
  roleId    Int        @map("role_id")
  fullName  String     @map("full_name")
  email     String     @unique
  password  String
  adminRole admin_role @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id          Int       @id @unique @default(autoincrement())
  slug        String    @unique
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @map("updated_at")
  name        String
  description String
  image       String?
  product     product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_item {
  id        Int       @id @unique @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @updatedAt @map("updated_at")
  orderId   Int       @map("order_id")
  productId Int       @map("product_id")
  quantity  Int       @db.SmallInt
  price     Int
  orders    order     @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products  product   @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order {
  id         Int          @id @unique @default(autoincrement())
  createdAt  DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime?    @updatedAt @map("updated_at")
  customerId Int          @map("customer_id")
  orderDate  DateTime?    @map("order_date") @db.Timestamptz(6)
  status     Int          @db.SmallInt
  total      Int
  users      user         @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderItem  order_item[]
  payment    payment[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment {
  id            Int       @id @unique @default(autoincrement())
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @updatedAt @map("updated_at")
  name          String
  description   String?
  orderId       Int       @map("order_id")
  paymentDate   DateTime? @map("payment_date") @db.Timestamptz(6)
  paymentMethod Int       @map("payment_method") @db.SmallInt
  orders        order     @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product {
  id          Int          @id @unique @default(autoincrement())
  slug        String       @unique
  name        String
  description String
  price       Int
  quantity    Int          @db.SmallInt
  categoryId  Int          @map("category_id")
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?    @updatedAt @map("updated_at")
  image       String
  orderItem   order_item[]
  category    category     @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  variant     variant[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model variant {
  id        Int       @id @unique @default(autoincrement())
  size      String?
  color     String?
  material  String?
  price     Int
  quantity  Int       @db.SmallInt
  productId Int       @map("product_id")
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @updatedAt @map("updated_at")
  image     String
  product   product   @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id          Int       @id @unique @default(autoincrement())
  fullName    String    @map("name")
  email       String    @unique
  phoneNumber String    @map("phone_number")
  address     String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @map("updated_at")
  password    String
  userRole    Int?      @map("user_role") @db.SmallInt
  orders      order[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_role {
  id        Int       @id @unique @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @updatedAt @map("updated_at")
  name      String
  admin     admin[]
}
